{{/*
Copyright (c) HashiCorp, Inc.
SPDX-License-Identifier: MPL-2.0
*/}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: terraform-enterprise 
  labels:
    app: terraform-enterprise
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: terraform-enterprise
  template:
    metadata:
      annotations:
    {{- if .Values.pod.annotations }}
    {{ toYaml .Values.pod.annotations | indent 8 }}
    {{ end }}
      labels:
        app: terraform-enterprise
    spec:
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }} 
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      volumes:
        - name: certificates
          secret:
            secretName: {{ .Values.tls.certificateSecret }}
        {{- if .Values.tls.caCertData }}
        - name: ca-certificates
          secret:
            secretName: terraform-enterprise-ca-certificates
        {{- end }}
      imagePullSecrets:
       - name: {{ .Values.image.pullSecret }}
      serviceAccountName: {{ .Release.Namespace }}
      initContainers:
        {{ toYaml .Values.initContainers | nindent 8}}
      containers: 
      - name: terraform-enterprise
        image: {{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}
        imagePullPolicy:  {{ .Values.image.pullPolicy }}
        env:
        {{- include "helpers.list-env-variables" . | indent 8 }}
        - name: TFE_RUN_PIPELINE_KUBERNETES_NAMESPACE
          value: {{ .Release.Namespace }}-agents
        - name: TFE_RUN_PIPELINE_DRIVER
          value: kubernetes
        - name: TFE_VAULT_DISABLE_MLOCK
          value: "true"
        - name: TFE_TLS_CERT_FILE
          value: "{{ .Values.tls.certMountPath }}"
        - name: TFE_TLS_KEY_FILE
          value: "{{ .Values.tls.keyMountPath }}"
        - name: TFE_HTTP_PORT
          value: "{{ .Values.tfe.privateHttpPort }}"
        - name: TFE_HTTPS_PORT
          value: "{{ .Values.tfe.privateHttpsPort }}"
        {{- if .Values.tls.caCertData }}
        - name: TFE_TLS_CA_BUNDLE_FILE
          value: /etc/ssl/certs/custom_ca_cert.pem
        {{- end }}
        readinessProbe:
          httpGet:
            path: /_health_check
            port: {{ .Values.tfe.privateHttpPort }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        volumeMounts:
          - name: certificates
            mountPath: {{ .Values.tls.certMountPath }}
            subPath: tls.crt
          - name: certificates
            mountPath: {{ .Values.tls.keyMountPath }}
            subPath: tls.key
          {{- if .Values.tls.caCertData }}
          - name: ca-certificates
            mountPath: {{ .Values.tls.caCertBaseDir }}/{{ .Values.tls.caCertFileName }}
            subPath: {{ .Values.tls.caCertFileName }}
          {{- end }}
