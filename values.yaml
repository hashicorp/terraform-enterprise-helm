# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0

# Default values for Terraform Enterprise on Kubernetes.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

# Image pull secret to use for registry authentication.
imagePullSecrets:
- name: terraform-enterprise

# Image sets the repo, name and tag of the Terraform Enterprise image to use.
image:
 repository: quay.io
 name: hashicorp/terraform-enterprise
 tag: latest
 pullPolicy: Always

pod:
# Configure pod annotations
  annotations: {}

# Resource limits are not set by default, to give the user the ability to set specific resource limits.
# If you do want to specify resource limits, uncomment the following lines and adjust them as necessary.
resources:
   requests:
     memory: "5000Mi"
     cpu: "4"
#  limits:
#    memory: ""
#    cpu: ""

# TLS for end-to-end encrypted transport
tls:
  certificateSecret: terraform-enterprise-certificates
  caCertBaseDir: /etc/ssl/certs
  caCertFileName: custom_ca_certs.pem
  certMountPath: /etc/ssl/private/terraform-enterprise/cert.pem
  keyMountPath: /etc/ssl/private/terraform-enterprise/key.pem
  # certData:
  # keyData:
  # caCertData:

tfe:
  privateHttpPort: 8080
  privateHttpsPort: 8443

# nodeSelector labels for server pod assignment, formatted as a multi-line string or YAML map.
nodeSelector: {}

# Toleration Settings
# This should be either a multi-line string or YAML matching
# the Toleration array in a PodSpec.
tolerations: []
# tolerations:
# - key: "key"
#   operator: "Equal"
#   value: "value"
#   effect: "NoSchedule"

# Affinity Settings
# Commenting out or setting as empty the affinity variable, will allow
# deployment to single node services such as Minikube
# This should be either a multi-line string or YAML matching the PodSpec's affinity field.
affinity: {}
#
## Example:
#
#  affinity: |
#    podAntiAffinity:
#      requiredDuringSchedulingIgnoredDuringExecution:
#        - labelSelector:
#            matchExpressions:
#             - key: foo
#               operator: In
#               values:
#               - bar
#          topologyKey: "kubernetes.io/hostname
#    podAffinity:
#      preferredDuringSchedulingIgnoredDuringExecution:
#        - weight: 50
#        podAffinityTerm:
#          labelSelector:
#            matchExpressions:
#            - key: foo
#              operator: In
#              values:
#                - bar
#          topologyKey: "kubernetes.io/hostname"

# Security context for the deployment template.
# The deployment securityContext is not set by default.
#This should be a YAML map corresponding to a
# Kubernetes [SecurityContext](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/) object.
securityContext: {}
    # runAsNonRoot: false
    # runAsUser: 1000
    # runAsGroup: 3000
    # fsGroup: 2000

# InitContainers is a list of init containers. Specified as a YAML list.
# This is useful if you need to run a script to provision TLS certificates or
# write out configuration files in a dynamic way.
initContainers: null
## Example ##
#- name: init-demo
#  image: busybox
#  command:
#      - wget
#      - "-O"
#      - "/work-dir/index.html"
#      - http://info.cern.ch
#    args:
#  volumeMounts:
#  - name: workdir
#      mountPath "/work-dir"
#    dnsPolicy: Default
#    volumes:
#    - name: workdir
#    emptyDir: {}

# Ingress allows ingress services to be created to allow external access
# from Kubernetes to access Terraform Enterprise pods.
ingress:
  enabled: false
  className: "" # nginx
  annotations: {}
    # nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
  hosts:
    - host: "" # "*.ptfe-dev.aws.ptfedev.com"
      paths:
        - path: /
          pathType: Prefix
          serviceName: "terraform-enterprise"
          portNumber: 443
  tls: []
    # - secretName: terraform-enterprise-certificates
    #   hosts:
    #   - "*.ptfe-dev.aws.ptfedev.com"

 # Injector service specific configurations
service:
  annotations: {}
    # cloud.google.com/neg: '{"ingress": true}'
  type: LoadBalancer # ClusterIP
  port: 443
  nodePort: 32443 # if service.type is NodePort value will be set

env:
  configMaps:
    - name: terraform-enterprise-env-config
    # - name: config-map-name
  secrets:
    - name: terraform-enterprise-env-secrets
    # - name: secret-name

